version: '3.9'

x-app: &default-app
  build: .
  restart: always

x-env: &env
  env_file:
    - .env

services:
  app:
    <<: [*default-app, *env]
    container_name: weather-collector-back
    expose:
      - 8000
    depends_on:
      - db
      - redis
      - worker
      - beat

  db:
    <<: *env
    image: postgres:15.3-alpine3.18
    container_name: weather-collector-db
    expose:
      - 5432
    healthcheck:
      test: pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}
      interval: 30s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 4G
    volumes:
      - weather_collector_pg:/var/lib/postgresql/data

  redis:
    image: redis:7.0.5-alpine
    container_name: redis
    restart: always
    expose:
      - 6379
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 1s
      timeout: 3s
      retries: 30

  worker:
    <<: [*default-app, *env]
    container_name: weather-collector-worker
    command: ['celery', '--app=src.tasks.tasks:celery_app', 'worker', '-l', 'info']
    depends_on:
      - redis

  beat:
    <<: [*default-app, *env]
    container_name: weather-collector-beat
    command: ['celery', '--app=src.tasks.tasks:celery_app', 'beat', '-l', 'info']
    depends_on:
      - redis
      - worker

  flower:
    <<: [*default-app, *env]
    container_name: weather-collector-flower
    command: ['celery', '--app=src.tasks.tasks:celery_app', 'flower', '--port=5555']
    depends_on:
      - redis
      - worker
      - beat

volumes:
  weather_collector_pg:
